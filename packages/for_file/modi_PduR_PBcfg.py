"""
Generated by leslie in shanghai, @leadrive.
Version 2.0
name: mod_PduR_PBcfg.py
time: 2019年3月20日14:54:42

kep o mvi
"""
from packages.basic.basic_functions import*
from packages.basic.log import Set_Log

import os
import logging


def Modi_PduR_PBcfg(dbcname):
	"""修改modi_PduR_PBcfg.c程序代码！"""

	
	#创建日志
	log_name = 'run_log.log'
	log_path = os.path.abspath('.')
	pd_pbc_log = Set_Log(log_name, log_path, logger_name='pd_pbc_log')
	
	file_name = dbcname
	print(file_name)
	filec_name = 'pending_file/PduR_PBcfg.c'
	gen_filec_name = 'processed_file/PduR_PBcfg.c'
	
	if os.path.exists(file_name):
		print("# find and open file " + file_name + " successfully.")
		pd_pbc_log.info("# find and open file " + file_name + " successfully.")
		
		#读取文件
		lines = Read_File(file_name)
		print("# Read file " + file_name + "successfully.")
		pd_pbc_log.info("# Read file " + file_name + "successfully.")
		
		#寻找帧名和ID
		lines_search = Search_Str(lines, 'BO_')
		idandnamedic = OutIDandAttriDic(lines_search, 1, 2)
		print("# Get dictionary successfully, consisted with frame ID number and frame name.")
		pd_pbc_log.info("# Get dictionary successfully, consisted with frame ID number and frame name.")
		
		#寻找ID和该帧周期时间，并找出周期最长帧
		lines_search = Search_Str(lines, 'BA_', '"GenMsgCycleTime"')
		idandcycdic = OutIDandAttriDic(lines_search, 3, 4)
		print("# Get dictionary successfully, consisted with frame ID number and frame cycletime.")
		pd_pbc_log.info("# Get dictionary successfully, consisted with frame ID number and frame cycletime.")
		
		#cyc_times_sym 是带有;结尾的列表
		cyc_times_sym = list(idandcycdic.values())
			
		cyc_times = []
		for cyc_time_sym in cyc_times_sym:
			cyc_times.append(int((cyc_time_sym.split(';')[0])))
			
		max_cyc_time = max(cyc_times)
		print("# Get the maximum cycletime.")
		pd_pbc_log.info("# Get the maximum cycletime.")
		
		for idnumber in idandcycdic.keys():
			if idandcycdic[idnumber] == str(max_cyc_time) + ';':
				max_idnumber = idnumber
				break
		print("# Get the frame ID number with the maximum cycletime.")
		pd_pbc_log.info("# Get the frame ID number with the maximum cycletime.")
				
		#最大周期帧名	
		max_name = idandnamedic[max_idnumber]
		print("# Get the frame name by the frame ID number.")
		pd_pbc_log.info("# Get the frame name by the frame ID number.")
		
		
		add_code = ['{ComConf_ComIPdu_'+max_name+',(PduR_upIfTriggerTxFP) PduR_RF_Com_TriggerTransmit, '\
			'(PduR_upIfTxConfirmationFP) PduR_RF_Com_TxConfirmation }	/* Index: 0  SrcPdu: CanNmUserData'\
			'  DestPdu: UserData_PduR2CanNm*/']
		before_code = 'static CONST(PduR_RT_LoTtIfTxToUp, PDUR_CONST ) PduR_CanNmTxToUp [] = {' 
		
		lines = Read_File(filec_name)
		code_pos = Search_code(before_code, lines)+1
		del lines[code_pos]
		lines = Add(lines, add_code, before_code)
		print("# Modify the error code with frame name successfully.")
		pd_pbc_log.info("# Modify the error code with frame name successfully.")
		
		Write_File(gen_filec_name, lines)
		print("# Creat a new file in pending_file folder successfully.")
		pd_pbc_log.info("Creat a new file in pending_file folder successfully.")
		#Show_File(gen_filec_name)

	else:
		print("没有找到文件: " + file_name)

	
def OutIDandAttriDic(lines_search, pos_id, pos_attribute):
	"""在列表中寻找帧ID及其某个属性，并以字典形式返回 """
	
	idandattridic = {}
	
	for line in lines_search:
		string = line.split()
		if len(string)>max([pos_id, pos_attribute]):
			idandattridic[string[pos_id]] = string[pos_attribute].split(':')[0]
			#print(string[pos_id])
			#print(string[pos_attribute].split(':')[0])
			
	return idandattridic
	
	
	

